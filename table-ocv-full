<!DOCTYPE html>
<html lang="hi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>स्टाइलिश TOC डेमो</title>
    <!-- 1. Font Awesome CDN (आवश्यक) -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Google Fonts (वैकल्पिक) -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&family=Roboto:wght@400;500;700&family=Orbitron:wght@700&display=swap" rel="stylesheet">

    <!-- 2. CSS स्टाइलिंग -->
    <style>
    /* --- सामान्य चर और स्टाइल --- */
    :root {
        /* रंग पैलेट */
        --toc-color-1: #6a11cb; /* गहरा बैंगनी */
        --toc-color-2: #2575fc; /* नीला */
        --toc-color-3: #00d2ff; /* हल्का सियान */
        --toc-color-4: #ff758c; /* गुलाबी */
        --toc-color-5: #fccb45; /* पीला */
        /* टेक्स्ट और हाइलाइट */
        --toc-text-light: #ffffff;
        --toc-text-dark: #343a40; /* लिस्ट आइटम टेक्स्ट के लिए */
        --toc-text-muted: #6c757d;
        --toc-highlight-bg-start: rgba(37, 117, 252, 0.1);
        --toc-highlight-bg-end: rgba(106, 17, 203, 0.15);
        --toc-highlight-duration: 6s; /* हाइलाइट एनिमेशन अवधि */
        --toc-popup-highlight-duration: 6s; /* पॉपअप हाइलाइट के लिए अवधि (JS द्वारा उपयोग किया गया) */
        /* अन्य */
        --toc-border-radius: 12px;
        --toc-font-main: 'Roboto', sans-serif;
        --toc-font-heading: 'Poppins', sans-serif;
        --toc-sidebar-width: 20vw; --toc-sidebar-min-width: 260px; --toc-sidebar-max-width: 320px;
        --toc-button-box-max-height-initial: 150px;
        --toc-button-box-max-height-expanded: 450px;
        --toc-close-icon-hover: #e74c3c;

        /* *** लिस्ट आइटम बैकग्राउंड रंग *** */
        --toc-list-bg-h2: #e9d8fd; /* हल्का बैंगनी */
        --toc-list-bg-h3: #d6eafe; /* हल्का नीला */
        --toc-list-bg-h4: #cffafe; /* हल्का सियान */
        --toc-list-bg-h5: #ffebee; /* हल्का गुलाबी */
        --toc-list-bg-h6: #fff8e1; /* हल्का पीला/क्रीम */
    }

    body {
        font-family: var(--toc-font-main);
        color: var(--toc-text-dark);
        line-height: 1.6;
        margin: 0; /* ब्राउज़र डिफ़ॉल्ट मार्जिन हटाएँ */
        padding: 20px; /* बॉडी में थोड़ी पैडिंग जोड़ें */
        background-color: #f8f9fa; /* हल्का बैकग्राउंड रंग */
    }
    html { scroll-behavior: smooth; }

    /* --- बटन TOC कंटेनर और बटन --- */
    #toc-button-wrapper {
        margin-bottom: 30px; position: relative; border-radius: var(--toc-border-radius);
        background: #fff; box-shadow: 0 6px 20px rgba(0,0,0,0.08);
        border: 1px solid #e9ecef; overflow: hidden;
    }
    #toc-button-header {
        display: flex; justify-content: space-between; align-items: center;
        padding: 12px 20px; cursor: pointer;
        background: linear-gradient(60deg, #c94b4b, #f67280); /* लाल/गुलाबी ग्रेडिएंट */
        color: var(--toc-text-light);
    }
    #toc-button-header h3 {
        margin: 0; font-family: var(--toc-font-heading); font-size: 1.3em;
        font-weight: 600; display: flex; align-items: center; gap: 10px;
    }
    .toc-button-title-text {
        display: inline-block; padding: 6px 20px; border-radius: 40px;
        background: rgba(255, 255, 255, 0.2); color: #fff0e6;
        font-weight: 600; font-size: 0.9em; margin: 0 6px;
        box-shadow: inset 0 1px 2px rgba(0,0,0,0.1); border: 1px solid rgba(255,255,255,0.25);
    }
    #toc-button-header h3 .fa-book-open {
        color: #ffe5d9; font-size: 1.1em;
    }
    .toc-open-prompt-icon {
        font-size: 0.9em; display: inline-block;
        animation: point-right-pulse 2s infinite ease-in-out;
        color: #ffffff; margin-left: 6px;
    }
    @keyframes point-right-pulse { 0%, 100% { transform: translateX(0); opacity: 0.9; } 50% { transform: translateX(6px); opacity: 1; } }
    #toc-button-toggle-icon {
        font-size: 1.4em; transition: transform 0.35s ease; color: var(--toc-text-light);
    }
    #toc-button-wrapper.collapsed #toc-button-toggle-icon { transform: rotate(-180deg); }
    #toc-button-wrapper.expanded #toc-button-toggle-icon { transform: rotate(0deg); } /* सुनिश्चित करें कि यह वापस घूमता है */

    /* --- बटन TOC स्क्रॉलबॉक्स --- */
    #toc-button-scrollbox {
        max-height: 0; /* डिफ़ॉल्ट रूप से बंद */
        overflow-y: auto; overflow-x: hidden;
        padding: 0 20px; /* पैडिंग केवल विस्तारित होने पर लागू होगी */
        position: relative; transition: max-height 0.55s ease-in-out, padding 0.55s ease-in-out, opacity 0.4s ease-out;
        border-top: none; /* डिफ़ॉल्ट रूप से बॉर्डर नहीं */
        opacity: 0;
        background-image: radial-gradient(circle at 10% 15%, var(--toc-color-1) 1px, transparent 1px), radial-gradient(circle at 85% 25%, var(--toc-color-2) 1px, transparent 1px), radial-gradient(circle at 25% 85%, var(--toc-color-3) 1px, transparent 1px), radial-gradient(circle at 70% 70%, var(--toc-color-4) 1px, transparent 1px), radial-gradient(circle at 45% 45%, var(--toc-color-5) 1px, transparent 1px);
        background-size: 40px 40px, 50px 50px, 60px 60px, 45px 45px, 55px 55px;
        background-repeat: repeat; background-color: #ffffff;
    }
    #toc-button-wrapper.expanded #toc-button-scrollbox {
        max-height: var(--toc-button-box-max-height-expanded);
        padding: 15px 20px;
        border-top: 1px solid #e9ecef;
        opacity: 1;
        transition: max-height 0.55s ease-in-out, padding 0.55s ease-in-out, opacity 0.3s ease-in 0.1s, border-top 0s linear 0.1s; /* बॉर्डर तुरंत दिखाएँ */
    }
    #toc-button-list { list-style: none; padding: 0; margin: 0; }

    /* --- फ्लोटिंग TOC आइकन --- */
    #floating-toc-icon {
        position: fixed; top: 50%; right: 30px; transform: translateY(-50%);
        font-size: 3.2em; color: var(--toc-color-1); background: none; border: none;
        padding: 0; cursor: pointer; z-index: 999;
        transition: opacity 0.4s ease, visibility 0.4s ease, transform 0.4s ease, color 0.4s ease, right 0.4s ease;
        text-shadow: 0 0 15px rgba(106, 17, 203, 0.7);
        animation: pulse-glow-float-original 2.8s infinite ease-in-out;
        opacity: 0; visibility: hidden; /* डिफ़ॉल्ट रूप से छिपा हुआ */
    }
    #floating-toc-icon.visible { opacity: 1; visibility: visible; }
    #floating-toc-icon:hover { transform: translateY(-50%) scale(1.2) rotate(12deg); filter: brightness(1.35); }
    body.toc-sidebar-open #floating-toc-icon { right: calc( clamp(var(--toc-sidebar-min-width), var(--toc-sidebar-width), var(--toc-sidebar-max-width)) + 35px); }
    @keyframes pulse-glow-float-original { 0%, 100% { transform: translateY(-50%) scale(1); filter: drop-shadow(0 0 8px var(--toc-color-1)); color: var(--toc-color-1); } 50% { transform: translateY(-55%) scale(1.08); filter: drop-shadow(0 0 20px var(--toc-color-2)); color: var(--toc-color-2); } }

    /* --- फ्लोटिंग आइकन साइडबार --- */
    #toc-icon-sidebar {
        position: fixed; top: 0; right: 0; width: clamp(var(--toc-sidebar-min-width), var(--toc-sidebar-width), var(--toc-sidebar-max-width));
        height: 100vh; background-color: #fff; box-shadow: -10px 0 40px rgba(0, 0, 0, 0.22);
        transform: translateX(100%); transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        z-index: 1010; display: flex; flex-direction: column; overflow: hidden;
        border-left: 5px solid; border-image: linear-gradient(180deg, var(--toc-color-1), var(--toc-color-2), var(--toc-color-3)) 1;
    }
    #toc-icon-sidebar.visible { transform: translateX(0); }
    #toc-icon-sidebar-header {
        padding: 18px 55px 18px 25px; border-bottom: 1px solid #e0e5ec; flex-shrink: 0; position: relative;
        background: linear-gradient(135deg, rgba(106,17,203,0.06), rgba(37,117,252,0.06));
    }
    #toc-icon-sidebar-header h3 {
        margin: 0; font-family: var(--toc-font-heading); font-size: 1.35em; font-weight: 700; text-align: center;
        color: var(--toc-color-1);
    }
    #toc-sidebar-internal-close {
        position: absolute; top: 50%; right: 18px; transform: translateY(-50%);
        background: none; border: none; width: 34px; height: 34px; font-size: 1.3em;
        color: #999; cursor: pointer; display: flex; justify-content: center; align-items: center;
        border-radius: 50%; transition: background-color 0.2s ease, color 0.2s ease, transform 0.3s ease;
    }
    #toc-sidebar-internal-close:hover { background-color: rgba(0,0,0,0.07); color: var(--toc-close-icon-hover); transform: translateY(-50%) rotate(180deg); }
    #toc-icon-sidebar-scrollbox {
        flex-grow: 1; overflow-y: auto; padding: 20px 15px 20px 20px; position: relative;
        background-image: linear-gradient(45deg, rgba(106,17,203,0.04) 25%, transparent 25%), linear-gradient(-45deg, rgba(37,117,252,0.04) 25%, transparent 25%), linear-gradient(45deg, transparent 75%, rgba(0,198,255,0.04) 75%), linear-gradient(-45deg, transparent 75%, rgba(255,107,107,0.04) 75%), radial-gradient(circle at center, rgba(254,202,87,0.04) 10%, transparent 11%);
        background-size: 45px 45px, 45px 45px, 45px 45px, 45px 45px, 100% 100%;
        background-position: 0 0, 0 22.5px, 22.5px -22.5px, 22.5px 0px, 0 0;
        background-color: #fdfdfe;
    }
    #toc-icon-sidebar-list { list-style: none; padding: 0 0 15vh 0; margin: 0; }

    /* --- बाहरी साइडबार क्लोज बटन --- */
    #toc-sidebar-external-close {
        position: fixed; top: 50%; left: 25px; transform: translateY(-50%);
        width: 48px; height: 48px; background: linear-gradient(135deg, var(--toc-color-4), var(--toc-color-3));
        border: none; border-radius: 50%; color: #fff; font-size: 1.6em;
        cursor: pointer; box-shadow: 0 6px 18px rgba(255, 107, 107, 0.5);
        z-index: 1011; display: flex; justify-content: center; align-items: center;
        opacity: 0; visibility: hidden; transition: all 0.4s ease;
        transform: translateY(-50%) scale(0.8);
    }
    #toc-sidebar-external-close.visible { opacity: 1; visibility: visible; transform: translateY(-50%) scale(1); }
    #toc-sidebar-external-close:hover { transform: translateY(-50%) scale(1.15) rotate(-20deg); box-shadow: 0 10px 25px rgba(255, 107, 107, 0.7); }

    /* --- साझा TOC लिस्ट आइटम स्टाइलिंग --- */
    .toc-list-item {
        margin-bottom: 9px; position: relative; border-radius: 9px; padding: 2px;
        background: linear-gradient(110deg, var(--toc-color-1), var(--toc-color-2), var(--toc-color-3), var(--toc-color-4), var(--toc-color-5));
        background-size: 400% 400%; animation: gradient-bg-animation 9s ease infinite;
        overflow: hidden; transition: box-shadow 0.3s ease;
    }
    .toc-list-item:hover { box-shadow: 0 4px 12px rgba(0,0,0,0.1); }

    .toc-list-item a {
        display: flex; align-items: flex-start; gap: 12px; padding: 13px 15px;
        text-decoration: none; border-radius: 7px; position: relative; z-index: 1;
        background-color: var(--toc-list-bg-h2); /* डिफ़ॉल्ट बैकग्राउंड (H2 का उपयोग) */
        color: var(--toc-text-dark); /* ठोस टेक्स्ट रंग */
        transition: transform 0.25s ease, background-color 0.2s ease;
    }
    .toc-list-item a:hover {
        transform: scale(1.015);
        background-color: #fff; /* होवर पर सफेद बैकग्राउंड */
    }
    /* क्लिक इफ़ेक्ट क्लास (बैकग्राउंड बदलें) */
    .toc-list-item a.toc-link-clicked {
        transform: scale(1.03);
        background-color: #eef; /* क्लिक पर हल्का नीला/बैंगनी टिंट */
        transition: transform 0.1s ease-out, background-color 0.1s ease-out;
    }

    @keyframes gradient-bg-animation { 0%{background-position:0% 50%} 50%{background-position:100% 50%} 100%{background-position:0% 50%} }

    .toc-list-item .toc-item-icon {
        margin-top: 4px; font-size: 1.1em; width: 1.3em; text-align: center; opacity: 1;
        transition: color 0.2s ease;
        color: var(--toc-color-1); /* डिफ़ॉल्ट रंग */
    }
    .toc-list-item a:hover .toc-item-icon {
         color: var(--toc-color-1); /* होवर पर रंग न बदलें */
    }
    .toc-list-item a.toc-link-clicked .toc-item-icon {
        color: var(--toc-color-1); /* क्लिक पर रंग न बदलें */
    }

    .toc-list-item .toc-item-text {
        flex-grow: 1; font-size: 1.1em; line-height: 1.65;
        font-weight: 600; font-family: var(--toc-font-main);
        white-space: normal; word-break: break-word;
    }

    /* --- पदानुक्रम स्टाइलिंग (बैकग्राउंड, आइकन रंग, पैडिंग) --- */
    .toc-list-item.level-2 { padding-left: 0; }
    .toc-list-item.level-2 a { font-weight: 700; font-size: 1.15em; background-color: var(--toc-list-bg-h2); }
    .toc-list-item.level-2 .toc-item-icon { color: var(--toc-color-1); font-size: 1.15em; }

    .toc-list-item.level-3 { padding-left: 18px; }
    .toc-list-item.level-3 a { font-weight: 600; font-size: 1.1em; background-color: var(--toc-list-bg-h3); }
    .toc-list-item.level-3 .toc-item-icon { color: var(--toc-color-2); }

    .toc-list-item.level-4 { padding-left: 36px; }
    .toc-list-item.level-4 a { font-weight: 600; font-size: 1.05em; background-color: var(--toc-list-bg-h4); }
    .toc-list-item.level-4 .toc-item-icon { color: var(--toc-color-3); }

    .toc-list-item.level-5 { padding-left: 54px; }
    .toc-list-item.level-5 a { font-weight: 600; font-size: 1.05em; background-color: var(--toc-list-bg-h5); }
    .toc-list-item.level-5 .toc-item-icon { color: var(--toc-color-4); }

    .toc-list-item.level-6 { padding-left: 72px; }
    .toc-list-item.level-6 a { font-weight: 600; font-size: 1.05em; background-color: var(--toc-list-bg-h6); }
    .toc-list-item.level-6 .toc-item-icon { color: var(--toc-color-5); }


    /* --- साझा स्क्रॉल इंडिकेटर --- */
    .toc-scroll-indicator {
        position: absolute; bottom: 10px; left: 50%; transform: translateX(-50%);
        font-size: 2.1em; opacity: 0; pointer-events: none;
        color: var(--toc-color-1);
        text-shadow: 0 0 10px var(--toc-color-3);
        animation: bounce-pulse 2s infinite ease-in-out;
        transition: opacity 0.4s ease;
    }
    .toc-scroll-indicator.visible { opacity: 1; }
    @keyframes bounce-pulse { 0%, 100% { transform: translate(-50%, 0px) scale(1); opacity: 0.7; } 50% { transform: translate(-50%, -10px) scale(1.1); opacity: 1; } }

    /* कस्टम स्क्रॉलबार */
    #toc-button-scrollbox::-webkit-scrollbar, #toc-icon-sidebar-scrollbox::-webkit-scrollbar { width: 6px; }
    #toc-button-scrollbox::-webkit-scrollbar-track, #toc-icon-sidebar-scrollbox::-webkit-scrollbar-track { background: rgba(0,0,0,0.04); border-radius: 3px; }
    #toc-button-scrollbox::-webkit-scrollbar-thumb, #toc-icon-sidebar-scrollbox::-webkit-scrollbar-thumb { background: linear-gradient(180deg, var(--toc-color-2), var(--toc-color-3)); border-radius: 3px; }
    /* Firefox के लिए स्क्रॉलबार स्टाइल (वैकल्पिक) */
    #toc-button-scrollbox, #toc-icon-sidebar-scrollbox { scrollbar-width: thin; scrollbar-color: var(--toc-color-2) rgba(0,0,0,0.04); }


    /* --- कंटेंट हाइलाइटिंग --- */
    @keyframes zoom-in-effect { 0% { transform: scale(0.98); opacity: 0.9; } 50% { transform: scale(1.02); opacity: 1; } 100% { transform: scale(1); opacity: 1; } }
    .toc-target-heading {
        position: relative; color: var(--toc-color-3) !important;
        animation: zoom-in-effect 0.6s ease-out forwards;
        padding: 5px 0; border-bottom: 3px solid transparent; transition: color 0.3s ease;
        text-shadow: 0 0 8px rgba(0, 210, 255, 0.5);
    }
    /* बॉर्डर एनिमेशन */
    .toc-target-heading::after { content: ''; position: absolute; left: 0; bottom: -2px; width: 100%; height: 3px; background: linear-gradient(90deg, var(--toc-color-2), var(--toc-color-1), var(--toc-color-3), var(--toc-color-2)); background-size: 200% 100%; animation: gradient-bg-animation 2.5s linear infinite; border-radius: 2px; transition: opacity 0.5s ease var(--toc-popup-highlight-duration); opacity: 1; }
    .toc-target-heading.fading-out::after { opacity: 0; }
    .toc-target-heading.fading-out { color: var(--toc-text-dark) !important; background: none; animation: none; text-shadow: none; transform: scale(1); }
    /* पैराग्राफ एनिमेशन */
    @keyframes pulse-background-alt { 0% { background-color: var(--toc-highlight-bg-start); box-shadow: 0 4px 15px rgba(37, 117, 252, 0.1); } 50% { background-color: var(--toc-highlight-bg-end); box-shadow: 0 6px 25px rgba(106, 17, 203, 0.18); } 100% { background-color: var(--toc-highlight-bg-start); box-shadow: 0 4px 15px rgba(37, 117, 252, 0.1); } }
    .toc-target-paragraph {
        padding: 20px; margin-left: -20px; margin-right: -20px; border-radius: var(--toc-border-radius);
        animation: pulse-background-alt 2.8s ease-in-out infinite;
        transition: background-color 0.5s ease, box-shadow 0.5s ease, padding 0.5s ease, margin 0.5s ease;
        transition-delay: calc(var(--toc-popup-highlight-duration) - 0.5s); /* फेड-आउट शुरू होने से ठीक पहले ट्रांज़िशन करें */
    }
    .toc-target-paragraph.fading-out {
        background-color: transparent !important; /* !important जोड़ें */
        box-shadow: none !important; /* !important जोड़ें */
        padding: 0; margin: 0; animation: none;
    }


    /* --- Responsive --- */
    @media (max-width: 768px) {
        :root { --toc-sidebar-width: 75vw; --toc-sidebar-min-width: 250px; --toc-sidebar-max-width: 310px;}
        #floating-toc-icon { font-size: 2.8em; right: 20px; }
        body.toc-sidebar-open #floating-toc-icon { right: calc( clamp(var(--toc-sidebar-min-width), var(--toc-sidebar-width), var(--toc-sidebar-max-width)) + 25px); }
        #toc-sidebar-external-close { width: 42px; height: 42px; font-size: 1.4em; left: 18px; }
        #toc-button-header h3 { font-size: 1.2em; }
        .toc-button-title-text { padding: 5px 16px; font-size: 0.88em; }
        #toc-icon-sidebar-header h3 { font-size: 1.25em; }
        #toc-icon-sidebar { width: clamp(var(--toc-sidebar-min-width), var(--toc-sidebar-width), var(--toc-sidebar-max-width)); } /* क्लैंप का उपयोग करें */
        .toc-list-item a { padding: 11px 13px; }
        .toc-list-item .toc-item-text { font-size: 1.05em; }
        .toc-list-item.level-3, .toc-list-item.level-4, .toc-list-item.level-5, .toc-list-item.level-6 { padding-left: 15px; } /* मोबाइल पर इंडेंटेशन कम करें */
        .toc-target-paragraph { padding: 15px; margin-left: -15px; margin-right: -15px; }
    }

    /* एक्सेसिबिलिटी: कम मोशन प्राथमिकता */
    @media (prefers-reduced-motion: reduce) {
      /* सामान्य ट्रांजिशन/एनिमेशन बंद करें */
      *, *::before, *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
        transition-delay: 0ms !important;
      }

      /* विशिष्ट एनिमेशन/ट्रांज़िशन बंद करें */
      .toc-open-prompt-icon,
      #floating-toc-icon,
      .toc-list-item, /* Gradient animation */
      .toc-target-heading,
      .toc-target-heading::after,
      .toc-target-paragraph,
      .toc-scroll-indicator,
      #toc-sidebar-internal-close,
      #toc-sidebar-external-close,
      .toc-list-item a {
        animation: none !important;
        transition: none !important; /* Ensure transitions are also off */
      }

       /* कार्यात्मकता के लिए आवश्यक ट्रांज़िशन/ट्रांसफ़ॉर्म रखें */
       #toc-button-toggle-icon { transition: transform 0.01ms !important; } /* स्टिल रोटेट */
       #toc-button-wrapper.collapsed #toc-button-toggle-icon { transform: rotate(-180deg); }
       #toc-button-wrapper.expanded #toc-button-toggle-icon { transform: rotate(0deg); }

       #toc-button-scrollbox { transition: max-height 0.01ms, padding 0.01ms, opacity 0.01ms !important; }
       #toc-icon-sidebar { transition: transform 0.01ms !important; }
       #toc-sidebar-external-close { transition: opacity 0.01ms, visibility 0.01ms, transform 0.01ms !important; }

       /* होवर/क्लिक पर सूक्ष्म परिवर्तन रखें */
       #toc-button-header:hover { background-color: #c0392b; } /* ग्रेडिएंट के बजाय ठोस रंग */
       .toc-list-item a:hover {
          transform: none; /* स्केल हटाएँ */
          background-color: #f8f9fa; /* थोड़ा अलग होवर बैकग्राउंड */
       }
       .toc-list-item a.toc-link-clicked {
          transform: none; /* स्केल हटाएँ */
          background-color: #eef; /* क्लिक बैकग्राउंड रखें */
       }
       #toc-sidebar-internal-close:hover {
           background-color: rgba(0,0,0,0.07);
           color: var(--toc-close-icon-hover);
           transform: translateY(-50%); /* रोटेशन हटाएँ */
       }
       #toc-sidebar-external-close:hover {
           transform: translateY(-50%) scale(1.05); /* स्केल कम करें, रोटेशन हटाएँ */
           box-shadow: 0 8px 20px rgba(255, 107, 107, 0.6);
       }
       #floating-toc-icon:hover {
           transform: translateY(-50%); /* स्केल/रोटेशन हटाएँ */
           filter: brightness(1.1); /* हल्की चमक */
       }
    }

    /* --- पोस्ट कंटेंट एरिया के लिए बेसिक स्टाइल --- */
    #post-content-area {
        background: #fff;
        padding: 25px 30px;
        border-radius: var(--toc-border-radius);
        box-shadow: 0 4px 15px rgba(0,0,0,0.06);
        margin-top: 20px; /* बटन TOC से अंतर */
    }
    #post-content-area h1, #post-content-area h2, #post-content-area h3, #post-content-area h4, #post-content-area h5, #post-content-area h6 {
        font-family: var(--toc-font-heading);
        margin-top: 1.8em;
        margin-bottom: 0.8em;
        color: #495057;
    }
    #post-content-area h1 { font-size: 2.2em; color: var(--toc-color-1); border-bottom: 2px solid var(--toc-color-1); padding-bottom: 10px; margin-top: 0;}
    #post-content-area h2 { font-size: 1.8em; color: var(--toc-color-2); }
    #post-content-area h3 { font-size: 1.5em; color: var(--toc-color-3); }
    #post-content-area h4 { font-size: 1.3em; color: var(--toc-color-4); }
    #post-content-area h5 { font-size: 1.15em; color: var(--toc-color-5); }
    #post-content-area h6 { font-size: 1.05em; color: #6c757d; }
    #post-content-area p {
        margin-bottom: 1.2em;
        color: #495057;
    }

    </style>
</head>
<body>

    <!-- 3. HTML संरचना -->
    <div class="toc-container">
        <div id="toc-button-wrapper" class="collapsed">
            <div id="toc-button-header" role="button" tabindex="0" aria-expanded="false" aria-controls="toc-button-scrollbox">
                <h3 id="toc-button-header-title">
                    <i class="fas fa-book-open"></i>
                    <span class="toc-button-title-text">सार संग्रह</span>
                    <i class="fas fa-hand-point-right toc-open-prompt-icon" aria-hidden="true"></i>
                </h3>
                <i id="toc-button-toggle-icon" class="fas fa-chevron-down"></i>
            </div>
            <div id="toc-button-scrollbox" role="region" aria-labelledby="toc-button-header-title">
                <ul id="toc-button-list">
                    <!-- TOC आइटम JS द्वारा यहाँ डाले जाएँगे -->
                </ul>
                <div id="button-scroll-indicator" class="toc-scroll-indicator">
                     <i class="fas fa-angles-down"></i>
                </div>
            </div>
        </div>

        <button id="floating-toc-icon" aria-label="विषय सूची खोलें">🧾</button>

        <button id="toc-sidebar-external-close" aria-label="विषय सूची बंद करें">
            <i class="fas fa-times"></i>
        </button>

        <div id="post-content-area">
            <!-- पोस्ट कंटेंट यहाँ -->
            <h1>अल्टिमेट स्टाइलिश TOC डेमो - रंग परिष्कृत</h1>
            <p>इस डेमो में एक इनलाइन, कोलैप्सेबल TOC और एक एडवांस्ड फ्लोटिंग साइडबार TOC दिखाता है जिसमें जटिल स्टाइलिंग और इंटरैक्शन हैं। रंगों को अंतिम रूप दिया गया है और लिंक क्लिक इफ़ेक्ट जोड़ा गया है। यह सुनिश्चित करता है कि सभी तत्व सही ढंग से काम कर रहे हैं।</p>

            <h2 id="intro-web">खंड 1: आधुनिक वेब का परिचय</h2>
            <p>वेब लगातार विकसित हो रहा है। प्रदर्शन, पहुंच और उपयोगकर्ता अनुभव पहले से कहीं अधिक महत्वपूर्ण हैं। आधुनिक वेब विकास में फ्रंट-एंड और बैक-एंड दोनों प्रौद्योगिकियों का तेजी से विकास शामिल है।</p>
            <p>यह पैराग्राफ भी खंड 1 का हिस्सा है। इसमें वेब मानकों, ब्राउज़र संगतता और प्रगतिशील वेब ऐप्स (PWAs) के महत्व पर जोर दिया गया है।</p>

            <h3 id="frontend-trends">उपखंड 1.1: फ्रंट-एंड ट्रेंड्स</h3>
            <p>फ्रंट-एंड इकोसिस्टम गतिशील है। रिएक्ट, व्यू और स्वेल्ट जैसे फ्रेमवर्क इंटरैक्टिव इंटरफेस बनाने के तरीके को बदल रहे हैं। टाइपस्क्रिप्ट का बढ़ता उपयोग कोड की मजबूती और रखरखाव में सुधार करता है।</p>

            <h4 id="react-ecosystem">स्तर 4 हेडिंग 1.1.1: रिएक्ट इकोसिस्टम</h4>
            <p>नेक्स्ट.जेएस (सर्वर-साइड रेंडरिंग और स्टेटिक साइट जनरेशन के लिए), रेडक्स (स्टेट मैनेजमेंट के लिए), और Zustand (सरल स्टेट मैनेजमेंट) जैसे उपकरणों ने रिएक्ट विकास को और सशक्त बनाया है। यह एक लंबा वाक्य है जो यह देखने के लिए है कि विभिन्न स्क्रीन आकारों पर टेक्स्ट रैपिंग कैसे काम करता है और क्या यह पठनीय रहता है।</p>

            <h5 id="vue-comp">स्तर 5 हेडिंग 1.1.1.1: कंपोजीशन बनाम ऑप्शन API</h5>
            <p>व्यू 3 में कंपोजीशन एपीआई बड़े और अधिक जटिल अनुप्रयोगों के लिए बेहतर कोड संगठन और पुन: प्रयोज्यता प्रदान करके अधिक लचीलापन प्रदान करता है, जबकि ऑप्शन एपीआई छोटे प्रोजेक्ट्स या शुरुआती लोगों के लिए सरल बना हुआ है।</p>

            <h2 id="performance-opt">खंड 2: प्रदर्शन अनुकूलन</h2>
            <p>तेज़ वेबसाइटें उपयोगकर्ता की संतुष्टि, रूपांतरण दर और SEO रैंकिंग के लिए महत्वपूर्ण हैं। यह खंड प्रमुख अनुकूलन तकनीकों को शामिल करता है जैसे कि कोड स्प्लिटिंग, लेज़ी लोडिंग, इमेज ऑप्टिमाइज़ेशन और कैशिंग रणनीतियाँ।</p>
            <p>यह खंड 2 का दूसरा पैराग्राफ है, जो क्रिटिकल रेंडरिंग पाथ और वेब वाइटल्स (जैसे LCP, FID, CLS) के महत्व पर केंद्रित है।</p>
            <p>और तीसरा पैराग्राफ विभिन्न प्रदर्शन निगरानी उपकरणों और तकनीकों पर चर्चा करता है।</p>
            <p>अतिरिक्त पैराग्राफ यह सुनिश्चित करने के लिए कि स्क्रॉल करने के लिए पर्याप्त सामग्री है।</p>
            <p>हम लेज़ी लोडिंग और कोड स्प्लिटिंग के बारे में अधिक बात कर सकते हैं।</p>
            <p>छवि अनुकूलन भी महत्वपूर्ण है: WebP या AVIF जैसे प्रारूपों का उपयोग करें।</p>
            <p>सर्वर-साइड अनुकूलन, जैसे सामग्री वितरण नेटवर्क (CDN) का उपयोग करना भी महत्वपूर्ण है।</p>

            <h2 id="accessibility-a11y">खंड 3: वेब एक्सेसिबिलिटी (a11y)</h2>
            <p>सभी उपयोगकर्ताओं के लिए वेब को सुलभ बनाना, चाहे उनकी क्षमता कुछ भी हो, एक नैतिक अनिवार्यता और कई क्षेत्रों में कानूनी आवश्यकता है। इसमें डिज़ाइन, विकास और सामग्री निर्माण शामिल है।</p>

            <h3 id="semantic-html">उपखंड 3.1: सिमेंटिक HTML</h3>
            <p>अर्थपूर्ण HTML टैग्स (जैसे `<nav>`, `<article>`, `<aside>`, `<button>`) का उचित रूप से उपयोग स्क्रीन रीडर्स और अन्य सहायक तकनीकों को सामग्री की संरचना और उद्देश्य को समझने में मदद करता है।</p>

            <h4 id="aria-attributes">स्तर 4 हेडिंग 3.1.1: ARIA विशेषताएँ</h4>
            <p>जब सिमेंटिक HTML अपर्याप्त हो, तो एक्सेसिबल रिच इंटरनेट एप्लिकेशन (ARIA) विशेषताएँ (जैसे `aria-label`, `aria-describedby`, `aria-hidden`) गतिशील सामग्री और कस्टम UI घटकों के लिए अतिरिक्त संदर्भ और अन्तरक्रियाशीलता प्रदान कर सकती हैं।</p>

            <h5 id="aria-roles">स्तर 5 हेडिंग 3.1.1.1: ARIA रोल्स</h5>
            <p>रोल्स (जैसे `role="button"`, `role="navigation"`, `role="dialog"`) स्पष्ट रूप से एक तत्व के उद्देश्य को परिभाषित करते हैं, खासकर जब गैर-मानक तत्वों का उपयोग इंटरैक्टिव घटकों को बनाने के लिए किया जाता है।</p>

            <h6 id="aria-example">स्तर 6 हेडिंग 3.1.1.1.1: एक छोटा उदाहरण</h6>
            <p>यह सबसे निचला स्तर है जिसे TOC कैप्चर करेगा। उदाहरण के लिए, `aria-label="मुख्य मेनू बंद करें"` बटन को एक सुलभ नाम दे सकता है जिसमें केवल एक आइकन होता है। WCAG (वेब कंटेंट एक्सेसिबिलिटी गाइडलाइन्स) मानकों का पालन करना महत्वपूर्ण है।</p>

            <h2 id="future-tech">खंड 4: भविष्य की टेक्नोलॉजीज</h2>
            <p>वेब असेंबली (Wasm) ब्राउज़र में लगभग-देशी प्रदर्शन को सक्षम बनाता है, WebGPU आधुनिक ग्राफिक्स क्षमताओं तक पहुंच प्रदान करता है, और ब्लॉकचेन और IPFS जैसी विकेन्द्रीकृत वेब (Web3) प्रौद्योगिकियां वेब के भविष्य को अधिक खुले, सुरक्षित और उपयोगकर्ता-केंद्रित तरीके से आकार दे रही हैं।</p>
            <p>अंतिम पैराग्राफ इस रोमांचक और लगातार बदलते परिदृश्य का निष्कर्ष निकालता है। डेवलपर्स को अपडेट रहने और नई संभावनाओं को अपनाने की आवश्यकता है।</p>
        </div>
    </div>

    <aside id="toc-icon-sidebar" aria-hidden="true">
        <div id="toc-icon-sidebar-header">
            <h3 id="toc-sidebar-title">विषय - सूची</h3>
            <button id="toc-sidebar-internal-close" class="toc-animated-close" aria-label="बंद करें">
                 <i class="fas fa-xmark"></i>
            </button>
        </div>
        <div id="toc-icon-sidebar-scrollbox">
            <ul id="toc-icon-sidebar-list">
                <!-- साइडबार TOC आइटम JS द्वारा यहाँ डाले जाएँगे -->
            </ul>
             <div id="sidebar-scroll-indicator" class="toc-scroll-indicator">
                  <i class="fas fa-angles-down"></i>
             </div>
        </div>
    </aside>

    <!-- 4. JavaScript कोड -->
    <script>
    document.addEventListener('DOMContentLoaded', () => {
        // --- एलिमेंट चयन ---
        const tocButtonWrapper = document.getElementById('toc-button-wrapper');
        const tocButtonHeader = document.getElementById('toc-button-header');
        const tocButtonScrollbox = document.getElementById('toc-button-scrollbox');
        const tocButtonList = document.getElementById('toc-button-list');
        const buttonScrollIndicator = document.getElementById('button-scroll-indicator');
        const floatingTocIcon = document.getElementById('floating-toc-icon');
        const tocSidebar = document.getElementById('toc-icon-sidebar');
        const tocSidebarInternalClose = document.getElementById('toc-sidebar-internal-close');
        const tocSidebarExternalClose = document.getElementById('toc-sidebar-external-close');
        const tocSidebarList = document.getElementById('toc-icon-sidebar-list');
        const tocSidebarScrollbox = document.getElementById('toc-icon-sidebar-scrollbox');
        const sidebarScrollIndicator = document.getElementById('sidebar-scroll-indicator');
        const postContentArea = document.getElementById('post-content-area');

        // --- राज्य चर ---
        let currentlyHighlightedElements = []; // हाइलाइट किए गए तत्वों का ट्रैक रखें
        let highlightTimeout = null; // हाइलाइट टाइमआउट को प्रबंधित करने के लिए
        let tocButtonObserver = null; // इंटरसेक्शन ऑब्जर्वर इंस्टेंस
        let hasHeadings = false; // क्या पोस्ट में हेडिंग हैं

        // --- कॉन्फ़िगरेशन ---
        const headingIcons = {
            2: 'fas fa-layer-group', // H2 के लिए आइकन
            3: 'fas fa-stream',      // H3 के लिए आइकन
            4: 'fas fa-circle-dot',  // H4 के लिए आइकन
            5: 'fas fa-minus',       // H5 के लिए आइकन
            6: 'fas fa-chevron-right' // H6 के लिए आइकन
        };
        const scrollOffset = 70; // स्क्रॉल करते समय हेडर के लिए ऑफसेट (पिक्सेल में)
        const highlightDurationFallback = 6000; // मिलीसेकंड में डिफ़ॉल्ट हाइलाइट अवधि (CSS متغیر से मेल खाना चाहिए)
        const clickEffectDuration = 400; // मिलीसेकंड में लिंक क्लिक प्रभाव अवधि

        // --- प्रारंभिक जांच ---
        if (!tocButtonList || !tocSidebarList || !postContentArea || !tocButtonWrapper || !floatingTocIcon || !tocSidebar) {
            console.warn("आवश्यक TOC तत्व या पोस्ट कंटेंट एरिया नहीं मिला। TOC कार्यक्षमता अक्षम हो सकती है।");
            if (tocButtonWrapper) tocButtonWrapper.style.display = 'none';
            if (floatingTocIcon) floatingTocIcon.style.display = 'none';
            return; // यदि आवश्यक तत्व मौजूद नहीं हैं तो आगे न बढ़ें
        }

        // --- हेडिंग्स से TOC बनाएं ---
        const headings = postContentArea.querySelectorAll('h1, h2, h3, h4, h5, h6'); // H1 को भी शामिल करें यदि आवश्यक हो, लेकिन आमतौर पर TOC H2 से शुरू होता है
        const fragmentButton = document.createDocumentFragment();
        const fragmentSidebar = document.createDocumentFragment();

        headings.forEach((heading) => {
             // H1 को छोड़ दें या अपनी आवश्यकतानुसार संभालें
             if (heading.tagName === 'H1') {
                 return;
             }

            hasHeadings = true;
            let id = heading.id;

            // यदि आईडी मौजूद नहीं है तो एक अद्वितीय आईडी बनाएं
            if (!id) {
                // टेक्स्ट से स्लग बनाएं
                id = 'toc_' + (heading.textContent || 'heading')
                                .trim()
                                .toLowerCase()
                                .replace(/\s+/g, '-') // स्पेसेस को हाइफ़न से बदलें
                                .replace(/[^\w-]+/g, ''); // गैर-अल्फ़ान्यूमेरिक वर्ण हटाएं (हाइफ़न को छोड़कर)

                // आईडी की विशिष्टता सुनिश्चित करें
                let counter = 1;
                let originalId = id;
                while (document.getElementById(id)) {
                    id = `${originalId}-${counter}`;
                    counter++;
                }
                heading.id = id; // हेडिंग में आईडी सेट करें
            }

            const level = parseInt(heading.tagName.substring(1));
            const linkText = heading.textContent || 'शीर्षक रहित';
            const iconClass = headingIcons[level] || 'fas fa-circle'; // डिफ़ॉल्ट आइकन

            // दोनों TOCs के लिए लिस्ट आइटम बनाएं
            [fragmentButton, fragmentSidebar].forEach(fragment => {
                const listItem = document.createElement('li');
                listItem.classList.add('toc-list-item', `level-${level}`);

                const link = document.createElement('a');
                link.href = `#${id}`;
                link.dataset.targetId = id; // आसान लक्ष्य पुनर्प्राप्ति के लिए डेटा विशेषता

                const iconSpan = document.createElement('span');
                iconSpan.className = 'toc-item-icon';
                iconSpan.innerHTML = `<i class="${iconClass}" aria-hidden="true"></i>`; // ARIA: आइकन सजावटी है

                const textSpan = document.createElement('span');
                textSpan.className = 'toc-item-text';
                textSpan.textContent = linkText;

                link.appendChild(iconSpan);
                link.appendChild(textSpan);
                listItem.appendChild(link);
                fragment.appendChild(listItem);
            });
        });

        // उत्पन्न TOC को DOM में जोड़ें
        tocButtonList.appendChild(fragmentButton);
        tocSidebarList.appendChild(fragmentSidebar);

        // यदि कोई हेडिंग नहीं मिली तो TOC छिपाएँ
        if (!hasHeadings) {
            tocButtonWrapper.style.display = 'none';
            floatingTocIcon.style.display = 'none';
        } else {
            // स्क्रॉल इंडिकेटर और ऑब्जर्वर सेटअप करें
            checkScrollIndicatorVisibility(tocButtonScrollbox, buttonScrollIndicator);
            checkScrollIndicatorVisibility(tocSidebarScrollbox, sidebarScrollIndicator);
            setupTocButtonObserver();
            setInitialButtonTocState();
        }

        // --- बटन TOC कार्यक्षमता ---
        function toggleButtonToc() {
            const isCollapsed = tocButtonWrapper.classList.toggle('collapsed');
            tocButtonWrapper.classList.toggle('expanded', !isCollapsed);
            tocButtonHeader.setAttribute('aria-expanded', String(!isCollapsed)); // स्ट्रिंग में बदलें
            if (!isCollapsed) {
                // विस्तारित होने पर इंडिकेटर जांचें
                checkScrollIndicatorVisibility(tocButtonScrollbox, buttonScrollIndicator);
                tocButtonScrollbox.focus(); // स्क्रॉलबॉक्स पर फ़ोकस करें
            } else {
                tocButtonHeader.focus(); // संक्षिप्त होने पर हेडर पर फ़ोकस करें
            }
        }

        function setInitialButtonTocState() {
            tocButtonWrapper.classList.add('collapsed');
            tocButtonWrapper.classList.remove('expanded');
            tocButtonHeader.setAttribute('aria-expanded', 'false');
            // सुनिश्चित करें कि प्रारंभिक अवस्था में इंडिकेटर छिपा हुआ है
            if(buttonScrollIndicator) buttonScrollIndicator.classList.remove('visible');
        }

        // बटन TOC टॉगल के लिए इवेंट श्रोता
        if (tocButtonHeader) {
            tocButtonHeader.addEventListener('click', toggleButtonToc);
            tocButtonHeader.addEventListener('keydown', (event) => {
                if (event.key === 'Enter' || event.key === ' ') {
                    event.preventDefault(); // डिफ़ॉल्ट क्रिया रोकें (जैसे स्पेस से स्क्रॉल करना)
                    toggleButtonToc();
                }
            });
        }

        // --- फ्लोटिंग आइकन दृश्यता (इंटरसेक्शन ऑब्जर्वर) ---
        function setupTocButtonObserver() {
            if (!('IntersectionObserver' in window)) {
                console.warn("IntersectionObserver समर्थित नहीं है। फ्लोटिंग TOC आइकन हमेशा दिख सकता है।");
                // फॉलबैक: आइकन को हमेशा दृश्यमान बनाएं यदि ऑब्जर्वर समर्थित नहीं है
                 if(floatingTocIcon && hasHeadings) floatingTocIcon.classList.add('visible');
                return;
            }

            const observerOptions = {
                root: null, // व्यूपोर्ट के सापेक्ष
                rootMargin: '0px',
                threshold: 0 // जैसे ही तत्व व्यूपोर्ट से बाहर निकलता है
            };

            tocButtonObserver = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    // यदि बटन TOC दिखाई नहीं दे रहा है और साइडबार बंद है, तो फ्लोटिंग आइकन दिखाएँ
                    if (!entry.isIntersecting && !tocSidebar.classList.contains('visible')) {
                         if(floatingTocIcon) floatingTocIcon.classList.add('visible');
                    } else {
                         if(floatingTocIcon) floatingTocIcon.classList.remove('visible');
                    }
                });
            }, observerOptions);

            tocButtonObserver.observe(tocButtonWrapper);
        }

        // --- साइडबार TOC कार्यक्षमता ---
        function openSidebar() {
            tocSidebar.classList.add('visible');
            tocSidebar.setAttribute('aria-hidden', 'false');
            document.body.classList.add('toc-sidebar-open');
            if(tocSidebarExternalClose) tocSidebarExternalClose.classList.add('visible');
             if(floatingTocIcon) floatingTocIcon.classList.remove('visible'); // साइडबार खुला होने पर फ्लोटिंग आइकन छिपाएँ

            // इंडिकेटर जांचें और फोकस सेट करें
            checkScrollIndicatorVisibility(tocSidebarScrollbox, sidebarScrollIndicator);
            setTimeout(() => tocSidebarInternalClose?.focus(), 50); // आंतरिक क्लोज बटन पर फोकस करें

            // बाहर क्लिक करने पर बंद करने के लिए श्रोता जोड़ें
             setTimeout(() => { // थोड़ी देरी के बाद जोड़ें ताकि प्रारंभिक क्लिक इसे बंद न करे
                 document.addEventListener('click', handleOutsideSidebarClick, true);
             }, 100);
        }

        function closeSidebar() {
            tocSidebar.classList.remove('visible');
            tocSidebar.setAttribute('aria-hidden', 'true');
            document.body.classList.remove('toc-sidebar-open');
            if(tocSidebarExternalClose) tocSidebarExternalClose.classList.remove('visible');

            // यदि बटन TOC अभी भी ऑफ-स्क्रीन है तो फ्लोटिंग आइकन फिर से दिखाएँ
            if (tocButtonObserver && !tocButtonObserver.takeRecords()[0]?.isIntersecting) {
                // दोबारा जांचने के लिए एक छोटा विलंब दें कि क्या बटन TOC अभी भी दृश्यमान नहीं है
                setTimeout(() => {
                    const buttonEntry = new IntersectionObserver(entries => {
                        if (!entries[0].isIntersecting) {
                             if(floatingTocIcon) floatingTocIcon.classList.add('visible');
                        }
                         // एक बार जांच करने के बाद ऑब्जर्वर को डिस्कनेक्ट करें
                        buttonEntry.disconnect();
                    }).observe(tocButtonWrapper);
                }, 50); // CSS ट्रांज़िशन के बाद जांच करें
            }

            // बाहर क्लिक श्रोता हटाएं
            document.removeEventListener('click', handleOutsideSidebarClick, true);

            // फोकस वापस फ्लोटिंग आइकन पर ले जाएं (यदि यह मौजूद है)
             if(floatingTocIcon) floatingTocIcon.focus();
        }

        // साइडबार के बाहर क्लिक हैंडलर
        function handleOutsideSidebarClick(event) {
            // जांचें कि क्या क्लिक साइडबार या इसे खोलने वाले आइकन के बाहर हुआ है
             if (tocSidebar.classList.contains('visible') &&
                 !tocSidebar.contains(event.target) &&
                 event.target !== floatingTocIcon && // आइकन पर क्लिक करने से बंद नहीं होना चाहिए
                 !floatingTocIcon?.contains(event.target) && // आइकन के अंदर क्लिक करने से बंद नहीं होना चाहिए
                 event.target !== tocSidebarExternalClose &&
                 !tocSidebarExternalClose?.contains(event.target))
             {
                closeSidebar();
             }
        }

        // साइडबार खोलने/बंद करने के लिए इवेंट श्रोता
        if (floatingTocIcon) {
            floatingTocIcon.addEventListener('click', (e) => {
                e.stopPropagation(); // बॉडी क्लिक को ट्रिगर होने से रोकें
                openSidebar();
            });
        }
        if (tocSidebarInternalClose) {
            tocSidebarInternalClose.addEventListener('click', closeSidebar);
        }
        if (tocSidebarExternalClose) {
            tocSidebarExternalClose.addEventListener('click', closeSidebar);
        }

        // एस्केप कुंजी से साइडबार बंद करें
        document.addEventListener('keydown', (event) => {
            if (event.key === 'Escape' && tocSidebar.classList.contains('visible')) {
                closeSidebar();
            }
        });

        // --- TOC लिंक क्लिक हैंडलिंग और हाइलाइटिंग ---
        function handleTocLinkClick(event) {
            const linkElement = event.target.closest('a');
            if (linkElement && linkElement.dataset.targetId) {
                event.preventDefault(); // डिफ़ॉल्ट एंकर व्यवहार रोकें
                const targetId = linkElement.dataset.targetId;
                const targetElement = document.getElementById(targetId);

                // लिंक पर क्लिक प्रभाव लागू करें
                linkElement.classList.add('toc-link-clicked');
                setTimeout(() => {
                    linkElement.classList.remove('toc-link-clicked');
                }, clickEffectDuration);

                if (targetElement) {
                    // यदि साइडबार खुला है, तो स्क्रॉल करने से पहले इसे बंद करें (स्मूद अनुभव के लिए थोड़ा विलंब दें)
                    if (tocSidebar.classList.contains('visible')) {
                         // साइडबार बंद होने के बाद स्क्रॉल करें
                        closeSidebar();
                         // थोड़ा विलंब दें ताकि साइडबार के बंद होने का ट्रांज़िशन स्क्रॉल के साथ इंटरफेयर न करे
                        setTimeout(() => {
                            scrollToElement(targetElement);
                        }, 300); // साइडबार बंद होने के ट्रांज़िशन समय के करीब
                    } else {
                        // साइडबार बंद है, तुरंत स्क्रॉल करें
                        scrollToElement(targetElement);
                    }
                } else {
                    console.warn(`लक्ष्य तत्व आईडी के साथ नहीं मिला: ${targetId}`);
                }
            }
        }

        function scrollToElement(element) {
             const offsetTop = element.getBoundingClientRect().top + window.pageYOffset - scrollOffset;
             window.scrollTo({
                 top: offsetTop,
                 behavior: 'smooth'
             });
             // स्क्रॉल पूरा होने के बाद हाइलाइट लागू करें
             // 'smooth' व्यवहार के लिए सटीक समय जानना मुश्किल है, इसलिए एक निश्चित विलंब का उपयोग करें
             setTimeout(() => {
                 applyHighlight(element);
                 // इतिहास बदलें ताकि URL हैश अपडेट हो जाए
                 // history.pushState(null, '', `#${element.id}`); // वैकल्पिक: यदि आप URL अपडेट करना चाहते हैं
             }, 700); // स्मूद स्क्रॉल के लिए अनुमानित समय
        }


        // TOC लिंक क्लिक के लिए इवेंट श्रोता (इवेंट डेलिगेशन)
        if (tocButtonList) tocButtonList.addEventListener('click', handleTocLinkClick);
        if (tocSidebarList) tocSidebarList.addEventListener('click', handleTocLinkClick);

        // --- हेडिंग और पैराग्राफ हाइलाइटिंग ---
        function applyHighlight(headingElement) {
            clearHighlight(); // पिछली हाइलाइट हटाएं

            headingElement.classList.add('toc-target-heading');
            currentlyHighlightedElements.push(headingElement);

            let nextElem = headingElement.nextElementSibling;
            const headingLevel = parseInt(headingElement.tagName.substring(1));

            // अगले हेडिंग तक (या समान/उच्च स्तर के हेडिंग तक) पैराग्राफ हाइलाइट करें
            while (nextElem) {
                const tagName = nextElem.tagName.toUpperCase();
                // यदि यह एक हेडिंग है, तो जांचें कि क्या यह हाइलाइटिंग समाप्त कर देता है
                if (tagName.startsWith('H')) {
                    const nextLevel = parseInt(tagName.substring(1));
                    if (nextLevel <= headingLevel) {
                        break; // समान या उच्च स्तर का हेडिंग मिला, रुकें
                    }
                }
                // यदि यह एक पैराग्राफ या संबंधित ब्लॉक तत्व है, तो हाइलाइट करें
                if (['P', 'UL', 'OL', 'DIV', 'BLOCKQUOTE', 'PRE'].includes(tagName)) {
                    nextElem.classList.add('toc-target-paragraph');
                    currentlyHighlightedElements.push(nextElem);
                }
                nextElem = nextElem.nextElementSibling;
            }

            // CSS متغیر से अवधि प्राप्त करें या फॉलबैक का उपयोग करें
             const highlightDuration = parseFloat(getComputedStyle(document.documentElement).getPropertyValue('--toc-popup-highlight-duration') || highlightDurationFallback / 1000) * 1000 || highlightDurationFallback;


            // हाइलाइट हटाने के लिए टाइमआउट सेट करें
            highlightTimeout = setTimeout(() => {
                currentlyHighlightedElements.forEach(el => {
                    el.classList.add('fading-out');
                    // फेड-आउट ट्रांज़िशन पूरा होने के बाद कक्षाएं हटाएं
                    setTimeout(() => {
                        el.classList.remove('toc-target-heading', 'toc-target-paragraph', 'fading-out');
                    }, 500); // CSS में ट्रांज़िशन अवधि से मेल खाना चाहिए
                });
                currentlyHighlightedElements = []; // ऐरे साफ़ करें
            }, highlightDuration - 500); // फेड-आउट ट्रांज़िशन समय घटाएं
        }

        function clearHighlight() {
            if (highlightTimeout) clearTimeout(highlightTimeout);
            highlightTimeout = null;
            currentlyHighlightedElements.forEach(el => {
                el.classList.remove('toc-target-heading', 'toc-target-paragraph', 'fading-out');
            });
            currentlyHighlightedElements = [];
        }

        // --- स्क्रॉल इंडिकेटर दृश्यता ---
        function checkScrollIndicatorVisibility(scrollbox, indicator) {
            if (!scrollbox || !indicator) return;

            let isVisible = false; // स्थानीय स्थिति ट्रैकर

            function check() {
                // बटन TOC के लिए विशेष मामला: यदि यह संक्षिप्त है तो इंडिकेटर छिपाएँ
                if (scrollbox === tocButtonScrollbox && tocButtonWrapper?.classList.contains('collapsed')) {
                    if (isVisible) {
                        indicator.classList.remove('visible');
                        isVisible = false;
                    }
                    return;
                }

                // क्या सामग्री स्क्रॉल करने योग्य है? (ऊंचाई में थोड़ा मार्जिन दें)
                const isScrollable = scrollbox.scrollHeight > scrollbox.clientHeight + 5;
                // क्या उपयोगकर्ता शीर्ष के पास है? (थोड़ा मार्जिन दें)
                const isNearTop = scrollbox.scrollTop < 20;

                const shouldBeVisible = isScrollable && isNearTop;

                if (shouldBeVisible && !isVisible) {
                    indicator.classList.add('visible');
                    isVisible = true;
                } else if (!shouldBeVisible && isVisible) {
                    indicator.classList.remove('visible');
                    isVisible = false;
                }
            }

            // थोड़ी देर बाद प्रारंभिक जांच करें ताकि सामग्री लोड हो सके
            setTimeout(check, 250);

            // स्क्रॉल पर जांच करें (थ्रॉटलिंग के बिना, लेकिन निष्क्रिय)
            scrollbox.addEventListener('scroll', check, { passive: true });

             // बटन TOC टॉगल होने पर भी जांच करें
             if (scrollbox === tocButtonScrollbox && tocButtonHeader) {
                 tocButtonHeader.addEventListener('click', () => {
                     // ट्रांज़िशन पूरा होने के बाद जांच करने के लिए विलंब करें
                     setTimeout(check, 600); // max-height ट्रांज़िशन समय से थोड़ा अधिक
                 });
             }
             // साइडबार खुलने पर जांच करें
             if (scrollbox === tocSidebarScrollbox && floatingTocIcon) {
                 floatingTocIcon.addEventListener('click', () => {
                     setTimeout(check, 550); // साइडबार खुलने के ट्रांज़िशन के बाद
                 });
             }
        }
    });
    </script>

</body>
</html>
